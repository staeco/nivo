{"version":3,"file":"nivo-marimekko.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/types.ts","../src/hooks.ts","../src/Bar.tsx","../src/Bars.tsx","../src/BarTooltip.tsx","../src/Marimekko.tsx","../src/ResponsiveMarimekko.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { LayerId, Layout, OffsetId } from './types'\n\nexport const defaultProps = {\n    layout: 'vertical' as Layout,\n    offset: 'none' as OffsetId,\n    outerPadding: 0,\n    innerPadding: 3,\n\n    layers: ['grid', 'axes', 'bars', 'legends'] as LayerId[],\n\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import * as React from 'react'\nimport {\n    stackOffsetDiverging,\n    stackOffsetExpand,\n    stackOffsetNone,\n    stackOffsetSilhouette,\n    stackOffsetWiggle,\n} from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport {\n    Box,\n    Dimensions,\n    Theme,\n    SvgDefsAndFill,\n    ModernMotionProps,\n    DataFormatter,\n} from '@nivo/core'\nimport { AxisProps } from '@nivo/axes'\nimport { OrdinalColorScaleConfig, InheritedColorConfig } from '@nivo/colors'\nimport { LegendProps } from '@nivo/legends'\n\nexport type DatumId = string | number\nexport type DatumValue = number\nexport type DatumFormattedValue = string | number\n\nexport type DatumPropertyAccessor<RawDatum, T> = (datum: RawDatum) => T\n\nexport interface DataProps<RawDatum> {\n    data: RawDatum[]\n    id: string | number | DatumPropertyAccessor<RawDatum, DatumId>\n    value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    dimensions: {\n        id: string\n        value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    }[]\n    valueFormat?: string | DataFormatter\n}\n\nexport interface NormalizedDatum<RawDatum> {\n    index: number\n    id: DatumId\n    value: DatumValue\n    data: RawDatum\n}\n\nexport interface DimensionDatum<RawDatum> {\n    id: string\n    value: number\n    formattedValue: string | number\n    color: string\n    x: number\n    y: number\n    width: number\n    height: number\n    datum: ComputedDatum<RawDatum>\n}\n\nexport interface ComputedDatum<RawDatum> extends NormalizedDatum<RawDatum> {\n    x: number\n    y: number\n    width: number\n    height: number\n    dimensions: DimensionDatum<RawDatum>[]\n}\n\nexport interface BarDatum<RawDatum> extends DimensionDatum<RawDatum> {\n    key: string\n    fill?: string\n    borderColor: string\n    borderWidth: number\n}\n\nexport type LabelAccessorFunction<RawDatum> = (datum: ComputedDatum<RawDatum>) => string | number\n\nexport type LayerId = 'grid' | 'axes' | 'bars' | 'legends'\n\nexport interface CustomLayerProps<RawDatum> {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}\n\nexport type CustomLayer<RawDatum> = React.FC<CustomLayerProps<RawDatum>>\n\nexport type Layer<RawDatum> = LayerId | CustomLayer<RawDatum>\n\nexport interface TooltipProps<RawDatum> {\n    bar: BarDatum<RawDatum>\n}\n\nexport type BarTooltipType<RawDatum> = (props: TooltipProps<RawDatum>) => JSX.Element\n\nexport type Layout = 'horizontal' | 'vertical'\n\nexport const offsetById = {\n    // Applies a zero baseline and normalizes the values\n    // for each point such that the topline is always one.\n    expand: stackOffsetExpand,\n    // Positive values are stacked above zero, negative values\n    // are stacked below zero, and zero values are stacked at zero.\n    diverging: stackOffsetDiverging,\n    // Applies a zero baseline.\n    none: stackOffsetNone,\n    // Shifts the baseline down such that the center of the streamgraph\n    // is always at zero.\n    silouhette: stackOffsetSilhouette,\n    // Shifts the baseline so as to minimize the weighted wiggle of layers.\n    // This offset is recommended for streamgraphs in conjunction with the inside-out order.\n    // See Stacked Graphsâ€”Geometry & Aesthetics by Bryon & Wattenberg for more information.\n    wiggle: stackOffsetWiggle,\n}\n\nexport type OffsetId = keyof typeof offsetById\n\nexport type CommonProps<RawDatum> = {\n    margin: Box\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n\n    // axes and grid\n    axisTop?: AxisProps\n    axisRight?: AxisProps\n    axisBottom?: AxisProps\n    axisLeft?: AxisProps\n    enableGridX: boolean\n    gridXValues?: number[]\n    enableGridY: boolean\n    gridYValues?: number[]\n\n    // colors, theme and border\n    colors: OrdinalColorScaleConfig<Omit<DimensionDatum<RawDatum>, 'color' | 'fill'>>\n    theme: Theme\n    borderWidth: number\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // labels\n    enableLabels: boolean\n    label: string | LabelAccessorFunction<RawDatum>\n    labelSkipWidth: number\n    labelSkipHeight: number\n    labelTextColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // interactivity\n    isInteractive: boolean\n    tooltip: BarTooltipType<RawDatum>\n\n    legends: LegendProps[]\n\n    role: string\n}\n\nexport type MouseEventHandler<RawDatum, ElementType> = (\n    datum: BarDatum<RawDatum>,\n    event: React.MouseEvent<ElementType>\n) => void\n\nexport type MouseEventHandlers<RawDatum, ElementType> = Partial<{\n    onClick: MouseEventHandler<RawDatum, ElementType>\n    onMouseEnter: MouseEventHandler<RawDatum, ElementType>\n    onMouseMove: MouseEventHandler<RawDatum, ElementType>\n    onMouseLeave: MouseEventHandler<RawDatum, ElementType>\n}>\n\nexport type SvgProps<RawDatum> = DataProps<RawDatum> &\n    Dimensions &\n    Partial<CommonProps<RawDatum>> &\n    ModernMotionProps &\n    SvgDefsAndFill<BarDatum<RawDatum>> &\n    MouseEventHandlers<RawDatum, SVGRectElement> & {\n        layers?: Layer<RawDatum>[]\n    }\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\nimport { stack as d3Stack, Stack, Series } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport {\n    // @ts-ignore\n    useValueFormatter,\n    useTheme,\n} from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    NormalizedDatum,\n    ComputedDatum,\n    DataProps,\n    DatumPropertyAccessor,\n    Layout,\n    DimensionDatum,\n    CommonProps,\n    CustomLayerProps,\n    BarDatum,\n    OffsetId,\n    offsetById,\n} from './types'\n\n// d3 stack does not support defining `.keys()` using\n// a mix of keys and custom value accessors, so we're\n// building a map of accessors in any case, we're gonna\n// use it later for `stack.value()`.\nexport const useDataDimensions = <RawDatum>(rawDimensions: DataProps<RawDatum>['dimensions']) =>\n    useMemo(() => {\n        const dimensions: Record<string, (datum: RawDatum) => number> = {}\n        const dimensionIds: string[] = []\n        rawDimensions.forEach(dimension => {\n            dimensionIds.push(dimension.id)\n            dimensions[dimension.id] =\n                typeof dimension.value === 'function'\n                    ? dimension.value\n                    : (datum: RawDatum) => get(datum, dimension.value as string, 0)\n        })\n\n        return { dimensionIds, dimensions }\n    }, [rawDimensions])\n\nexport const useStack = <RawDatum>(\n    dimensionIds: string[],\n    dimensions: Record<string, (datum: RawDatum) => number>,\n    offset: OffsetId\n) =>\n    useMemo(() => {\n        const offsetFunction = offsetById[offset]\n\n        return d3Stack<RawDatum>()\n            .keys(dimensionIds)\n            .value((datum, key) => dimensions[key](datum))\n            .offset(offsetFunction)\n    }, [dimensionIds, dimensions, offset])\n\nexport const useStackedData = <RawDatum>(\n    stack: Stack<any, RawDatum, string>,\n    data: DataProps<RawDatum>['data']\n) =>\n    useMemo(() => {\n        const stacked = stack(data)\n\n        const allValues: number[] = []\n        stacked.forEach(dimension => {\n            dimension.forEach(datum => {\n                allValues.push(datum[0])\n                allValues.push(datum[1])\n            })\n        })\n\n        const min = Math.min(...allValues)\n        const max = Math.max(...allValues)\n\n        return {\n            stacked,\n            min,\n            max,\n        }\n    }, [stack, data])\n\nexport const useDimensionsScale = (\n    min: number,\n    max: number,\n    width: number,\n    height: number,\n    layout: Layout\n) =>\n    useMemo(() => {\n        if (layout === 'vertical') {\n            return scaleLinear().domain([max, min]).range([0, height])\n        }\n\n        return scaleLinear().domain([min, max]).range([0, width])\n    }, [min, max, width, height, layout])\n\nexport const useNormalizedData = <RawDatum>(\n    data: DataProps<RawDatum>['data'],\n    id: DataProps<RawDatum>['id'],\n    value: DataProps<RawDatum>['value']\n) => {\n    const getId: DatumPropertyAccessor<RawDatum, string | number> =\n        typeof id === 'function' ? id : (datum: RawDatum) => get(datum, id)\n    const getValue: DatumPropertyAccessor<RawDatum, number> =\n        typeof value === 'function' ? value : (datum: RawDatum) => get(datum, value, 0)\n\n    return useMemo(() => {\n        const normalized: NormalizedDatum<RawDatum>[] = []\n        data.forEach((datum, index) => {\n            const datumId = getId(datum)\n            const datumValue = getValue(datum)\n\n            normalized.push({\n                index,\n                id: datumId,\n                value: datumValue,\n                data: datum,\n            })\n        })\n\n        return normalized\n    }, [data, getId, getValue])\n}\n\nexport const useThicknessScale = <RawDatum>({\n    data,\n    width,\n    height,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    width: number\n    height: number\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) =>\n    useMemo(() => {\n        const totalValue = data.reduce((acc, datum) => acc + datum.value, 0)\n\n        const thicknessScale = scaleLinear().domain([0, totalValue])\n\n        const totalPadding = 2 * outerPadding + (data.length - 1) * innerPadding\n\n        if (layout === 'vertical') {\n            thicknessScale.range([0, width - totalPadding])\n        } else {\n            thicknessScale.range([0, height - totalPadding])\n        }\n\n        return thicknessScale\n    }, [data, width, height, layout])\n\nexport const useComputedData = <RawDatum>({\n    data,\n    stacked,\n    dimensionIds,\n    valueFormat,\n    thicknessScale,\n    dimensionsScale,\n    colors,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    stacked: Series<RawDatum, string>[]\n    dimensionIds: string[]\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n    colors: CommonProps<RawDatum>['colors']\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) => {\n    const getColor = useOrdinalColorScale<Omit<DimensionDatum<RawDatum>, 'color'>>(colors, 'id')\n\n    const formatValue = useValueFormatter(valueFormat)\n\n    return useMemo(() => {\n        const computedData: ComputedDatum<RawDatum>[] = []\n\n        let position = outerPadding\n\n        data.forEach(datum => {\n            const thickness = thicknessScale(datum.value)\n\n            const computedDatum: ComputedDatum<RawDatum> = {\n                ...datum,\n                x: layout === 'vertical' ? position : 0,\n                y: layout === 'vertical' ? 0 : position,\n                width: layout === 'vertical' ? thickness : 0,\n                height: layout === 'vertical' ? 0 : thickness,\n                dimensions: [],\n            }\n\n            const allPositions: number[] = []\n            let totalSize = 0\n\n            position += thickness + innerPadding\n\n            dimensionIds.forEach(dimensionId => {\n                const dimension = stacked.find(stack => stack.key === dimensionId)\n                if (dimension) {\n                    const dimensionPoint = dimension[datum.index]\n                    const dimensionDatum: DimensionDatum<RawDatum> = {\n                        id: dimensionId,\n                        datum: computedDatum,\n                        value: dimensionPoint[1] - dimensionPoint[0],\n                        formattedValue: formatValue(dimensionPoint[1] - dimensionPoint[0]),\n                        color: 'rgba(0, 0, 0, 0)',\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    }\n\n                    const position0 = dimensionsScale(dimensionPoint[0])\n                    const position1 = dimensionsScale(dimensionPoint[1])\n\n                    if (layout === 'vertical') {\n                        dimensionDatum.x = computedDatum.x\n                        dimensionDatum.y = Math.min(position0, position1)\n                        dimensionDatum.width = computedDatum.width\n                        dimensionDatum.height = Math.max(position0, position1) - dimensionDatum.y\n\n                        allPositions.push(dimensionDatum.y)\n                        totalSize += dimensionDatum.height\n                    } else {\n                        dimensionDatum.x = Math.min(position0, position1)\n                        dimensionDatum.y = computedDatum.y\n                        dimensionDatum.width = Math.max(position0, position1) - dimensionDatum.x\n                        dimensionDatum.height = computedDatum.height\n\n                        allPositions.push(dimensionDatum.x)\n                        totalSize += dimensionDatum.width\n                    }\n\n                    dimensionDatum.color = getColor(dimensionDatum)\n\n                    computedDatum.dimensions.push(dimensionDatum)\n                }\n\n                if (layout === 'vertical') {\n                    computedDatum.y = Math.min(...allPositions)\n                    computedDatum.height = totalSize\n                } else {\n                    computedDatum.x = Math.min(...allPositions)\n                    computedDatum.width = totalSize\n                }\n            })\n\n            computedData.push(computedDatum)\n        })\n\n        return computedData\n    }, [\n        data,\n        stacked,\n        dimensionIds,\n        thicknessScale,\n        dimensionsScale,\n        layout,\n        outerPadding,\n        innerPadding,\n        getColor,\n        formatValue,\n    ])\n}\n\nexport const useBars = <RawDatum>(\n    data: ComputedDatum<RawDatum>[],\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>,\n    borderWidth: number\n) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<DimensionDatum<RawDatum>>(borderColor, theme)\n\n    return useMemo(() => {\n        const all: BarDatum<RawDatum>[] = []\n        data.forEach(datum => {\n            datum.dimensions.forEach(dimension => {\n                all.push({\n                    key: `${datum.id}-${dimension.id}`,\n                    ...dimension,\n                    borderColor: getBorderColor(dimension),\n                    borderWidth,\n                })\n            })\n        })\n\n        return all\n    }, [data, borderWidth, getBorderColor])\n}\n\nexport const useMarimekko = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions: rawDimensions,\n    layout,\n    offset,\n    outerPadding,\n    innerPadding,\n    colors,\n    borderColor,\n    borderWidth,\n    width,\n    height,\n}: {\n    data: DataProps<RawDatum>['data']\n    id: DataProps<RawDatum>['id']\n    value: DataProps<RawDatum>['value']\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    dimensions: DataProps<RawDatum>['dimensions']\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n    colors: CommonProps<RawDatum>['colors']\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n    borderWidth: number\n    width: number\n    height: number\n}) => {\n    const { dimensionIds, dimensions } = useDataDimensions<RawDatum>(rawDimensions)\n    const stack = useStack<RawDatum>(dimensionIds, dimensions, offset)\n    const { stacked, min, max } = useStackedData<RawDatum>(stack, data)\n    const normalizedData = useNormalizedData<RawDatum>(data, id, value)\n    const thicknessScale = useThicknessScale({\n        data: normalizedData,\n        width,\n        height,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const dimensionsScale = useDimensionsScale(min, max, width, height, layout)\n    const computedData = useComputedData<RawDatum>({\n        data: normalizedData,\n        stacked,\n        dimensionIds,\n        valueFormat,\n        thicknessScale,\n        dimensionsScale,\n        colors,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const bars = useBars<RawDatum>(computedData, borderColor, borderWidth)\n\n    return {\n        computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n        dimensionIds,\n    }\n}\n\nexport const useLayerContext = <RawDatum>({\n    data,\n    bars,\n    thicknessScale,\n    dimensionsScale,\n}: {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}): CustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            data,\n            bars,\n            thicknessScale,\n            dimensionsScale,\n        }),\n        [data, bars, thicknessScale, dimensionsScale]\n    )\n\nexport const useLegendData = <RawDatum>(dimensionIds: string[], bars: BarDatum<RawDatum>[]) => {\n    const legendData: {\n        id: string\n        label: string\n        color: string\n        fill?: string\n    }[] = []\n\n    dimensionIds.forEach(dimensionId => {\n        const bar = bars.find(bar => bar.id === dimensionId)\n        if (bar) {\n            legendData.push({\n                id: dimensionId,\n                label: dimensionId,\n                color: bar.color,\n                fill: bar.fill,\n            })\n        }\n    })\n\n    return legendData\n}\n","import React, { createElement, MouseEvent, useCallback } from 'react'\nimport { animated, SpringValues, to } from 'react-spring'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\n\ninterface BarProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    bar: BarDatum<RawDatum>\n    animatedProps: SpringValues<{\n        x: number\n        y: number\n        width: number\n        height: number\n        opacity: number\n        color: string\n        borderColor: string\n    }>\n    isInteractive: boolean\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bar = <RawDatum,>({\n    bar,\n    animatedProps,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { bar }), event),\n        [showTooltipFromEvent, tooltip, bar]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.(bar, event)\n        },\n        [onClick, bar]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseMove?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(bar, event)\n            hideTooltip()\n        },\n        [onMouseLeave, bar, hideTooltip]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={to(animatedProps.width, value => Math.max(value, 0))}\n            height={to(animatedProps.height, value => Math.max(value, 0))}\n            fill={bar.fill ?? animatedProps.color}\n            stroke={animatedProps.borderColor}\n            strokeWidth={bar.borderWidth}\n            onClick={isInteractive ? handleClick : undefined}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import React from 'react'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\nimport { Bar } from './Bar'\n\ninterface BarsProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    isInteractive: boolean\n    bars: BarDatum<RawDatum>[]\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bars = <RawDatum,>({\n    bars,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarsProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<\n        BarDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            width: number\n            height: number\n            color: string\n            opacity: number\n            borderColor: string\n        }\n    >(bars, {\n        key: bar => bar.key,\n        initial: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        from: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 0,\n            borderColor: bar.borderColor,\n        }),\n        enter: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        update: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        leave: bar => ({\n            opacity: 0,\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((style, bar) => (\n                <Bar<RawDatum>\n                    key={bar.key}\n                    bar={bar}\n                    animatedProps={style}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                />\n            ))}\n        </>\n    )\n}\n","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { BarDatum } from './types'\n\nexport const BarTooltip = <RawDatum,>({ bar }: { bar: BarDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={`${bar.datum.id} - ${bar.id}`}\n        value={bar.formattedValue}\n        enableChip={true}\n        color={bar.color}\n    />\n)\n","import React, { createElement, Fragment, ReactNode } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SvgProps, LayerId, DimensionDatum } from './types'\nimport { defaultProps } from './props'\nimport { useMarimekko, useLayerContext, useLegendData } from './hooks'\nimport { Bars } from './Bars'\nimport { BarTooltip } from './BarTooltip'\n\nconst InnerMarimekko = <RawDatum,>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions,\n    width,\n    height,\n    margin: partialMargin,\n    layout = defaultProps.layout,\n    offset = defaultProps.offset,\n    outerPadding = defaultProps.outerPadding,\n    innerPadding = defaultProps.innerPadding,\n    layers = defaultProps.layers,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX = defaultProps.enableGridX,\n    gridXValues,\n    enableGridY = defaultProps.enableGridY,\n    gridYValues,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<DimensionDatum<RawDatum>, 'color'>\n    >,\n    defs = [],\n    fill = [],\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<DimensionDatum<RawDatum>>,\n    isInteractive = defaultProps.isInteractive,\n    tooltip = BarTooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    legends = [],\n    role,\n}: SvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { computedData, bars, thicknessScale, dimensionsScale, dimensionIds } = useMarimekko<\n        RawDatum\n    >({\n        data,\n        id,\n        value,\n        dimensions,\n        valueFormat,\n        layout,\n        offset,\n        outerPadding,\n        innerPadding,\n        colors,\n        borderColor,\n        borderWidth,\n        width: innerWidth,\n        height: innerHeight,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        bars: null,\n        legends: null,\n    }\n\n    const boundDefs = bindDefs(defs, bars, fill)\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Bars<RawDatum>\n                key=\"bars\"\n                bars={bars}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n            />\n        )\n    }\n\n    const xScale = layout === 'vertical' ? thicknessScale : dimensionsScale\n    const yScale = layout === 'vertical' ? dimensionsScale : thicknessScale\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                xScale={enableGridX ? (xScale as any) : undefined}\n                yScale={enableGridY ? (yScale as any) : undefined}\n                width={innerWidth}\n                height={innerHeight}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    const legendData = useLegendData<RawDatum>(dimensionIds, bars)\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <g key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    const layerContext = useLayerContext<RawDatum>({\n        data: computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as LayerId] !== undefined) {\n                    return layerById[layer as LayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Marimekko = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: SvgProps<RawDatum>) => (\n    <Container\n        theme={otherProps.theme}\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n    >\n        <InnerMarimekko<RawDatum>\n            isInteractive={isInteractive}\n            animate={animate}\n            motionConfig={motionConfig}\n            {...otherProps}\n        />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Marimekko } from './Marimekko'\nimport { SvgProps } from './types'\n\nexport const ResponsiveMarimekko = <RawDatum,>(\n    props: Omit<SvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Marimekko<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defaultProps","layout","offset","outerPadding","innerPadding","layers","enableGridX","enableGridY","colors","scheme","borderWidth","borderColor","from","modifiers","isInteractive","animate","motionConfig","defineProperty","offsetById","expand","stackOffsetExpand","diverging","stackOffsetDiverging","none","stackOffsetNone","silouhette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","useDataDimensions","rawDimensions","useMemo","dimensions","dimensionIds","forEach","dimension","push","id","value","datum","useStack","offsetFunction","d3Stack","keys","key","useStackedData","stack","data","stacked","allValues","min","Math","max","useDimensionsScale","width","height","scaleLinear","domain","range","useNormalizedData","getId","getValue","normalized","index","datumId","datumValue","useThicknessScale","totalValue","reduce","acc","thicknessScale","totalPadding","length","useComputedData","valueFormat","dimensionsScale","getColor","useOrdinalColorScale","formatValue","useValueFormatter","computedData","position","thickness","computedDatum","x","y","allPositions","totalSize","dimensionId","find","dimensionPoint","dimensionDatum","formattedValue","color","position0","position1","useBars","theme","useTheme","getBorderColor","useInheritedColor","all","useMarimekko","normalizedData","bars","useLayerContext","useLegendData","legendData","bar","label","fill","Bar","animatedProps","tooltip","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","event","createElement","handleClick","handleMouseEnter","handleMouseMove","handleMouseLeave","to","undefined","Bars","useMotionConfig","springConfig","config","transition","useTransition","initial","opacity","enter","update","leave","immediate","style","BarTooltip","InnerMarimekko","partialMargin","margin","axisTop","axisRight","axisBottom","axisLeft","gridXValues","gridYValues","defs","legends","role","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","layerById","grid","axes","boundDefs","bindDefs","includes","xScale","yScale","map","legend","i","layerContext","layer","Marimekko","otherProps","ResponsiveMarimekko","props"],"mappings":";;;;;;;;;;;AAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;IChBaC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,UADgB;AAExBC,EAAAA,MAAM,EAAE,MAFgB;AAGxBC,EAAAA,YAAY,EAAE,CAHU;AAIxBC,EAAAA,YAAY,EAAE,CAJU;AAMxBC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,CANgB;AAQxBC,EAAAA,WAAW,EAAE,KARW;AASxBC,EAAAA,WAAW,EAAE,IATW;AAWxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAXgB;AAYxBC,EAAAA,WAAW,EAAE,CAZW;AAaxBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAE,OADG;AAETC,IAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;AAFF,GAbW;AAkBxBC,EAAAA,aAAa,EAAE,IAlBS;AAoBxBC,EAAAA,OAAO,EAAE,IApBe;AAqBxBC,EAAAA,YAAY,EAAE;AArBU;;ACFb,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;IC6DaC,UAAU,GAAG;AAGtBC,EAAAA,MAAM,EAAEC,iBAHc;AAMtBC,EAAAA,SAAS,EAAEC,oBANW;AAQtBC,EAAAA,IAAI,EAAEC,eARgB;AAWtBC,EAAAA,UAAU,EAAEC,qBAXU;AAetBC,EAAAA,MAAM,EAAEC;AAfc;;ACnEnB,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAWC,aAAX;AAAA,SAC7BC,OAAO,CAAC,YAAM;AACV,QAAMC,UAAuD,GAAG,EAAhE;AACA,QAAMC,YAAsB,GAAG,EAA/B;AACAH,IAAAA,aAAa,CAACI,OAAd,CAAsB,UAAAC,SAAS,EAAI;AAC/BF,MAAAA,YAAY,CAACG,IAAb,CAAkBD,SAAS,CAACE,EAA5B;AACAL,MAAAA,UAAU,CAACG,SAAS,CAACE,EAAX,CAAV,GACI,OAAOF,SAAS,CAACG,KAAjB,KAA2B,UAA3B,GACMH,SAAS,CAACG,KADhB,GAEM,UAACC,KAAD;AAAA,eAAqB,KAAIA,KAAJ,EAAWJ,SAAS,CAACG,KAArB,EAAsC,CAAtC,CAArB;AAAA,OAHV;AAIH,KAND;AAQA,WAAO;AAAEL,MAAAA,YAAY,EAAZA,YAAF;AAAgBD,MAAAA,UAAU,EAAVA;AAAhB,KAAP;AACH,GAZM,EAYJ,CAACF,aAAD,CAZI,CADsB;AAAA,CAA1B;AAeA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CACpBP,YADoB,EAEpBD,UAFoB,EAGpB9B,MAHoB;AAAA,SAKpB6B,OAAO,CAAC,YAAM;AACV,QAAMU,cAAc,GAAGvB,UAAU,CAAChB,MAAD,CAAjC;AAEA,WAAOwC,KAAO,GACTC,IADE,CACGV,YADH,EAEFK,KAFE,CAEI,UAACC,KAAD,EAAQK,GAAR;AAAA,aAAgBZ,UAAU,CAACY,GAAD,CAAV,CAAgBL,KAAhB,CAAhB;AAAA,KAFJ,EAGFrC,MAHE,CAGKuC,cAHL,CAAP;AAIH,GAPM,EAOJ,CAACR,YAAD,EAAeD,UAAf,EAA2B9B,MAA3B,CAPI,CALa;AAAA,CAAjB;AAcA,IAAM2C,cAAc,GAAG,SAAjBA,cAAiB,CAC1BC,KAD0B,EAE1BC,IAF0B;AAAA,SAI1BhB,OAAO,CAAC,YAAM;AACV,QAAMiB,OAAO,GAAGF,KAAK,CAACC,IAAD,CAArB;AAEA,QAAME,SAAmB,GAAG,EAA5B;AACAD,IAAAA,OAAO,CAACd,OAAR,CAAgB,UAAAC,SAAS,EAAI;AACzBA,MAAAA,SAAS,CAACD,OAAV,CAAkB,UAAAK,KAAK,EAAI;AACvBU,QAAAA,SAAS,CAACb,IAAV,CAAeG,KAAK,CAAC,CAAD,CAApB;AACAU,QAAAA,SAAS,CAACb,IAAV,CAAeG,KAAK,CAAC,CAAD,CAApB;AACH,OAHD;AAIH,KALD;AAOA,QAAMW,GAAG,GAAGC,IAAI,CAACD,GAAL,OAAAC,IAAI,EAAQF,SAAR,CAAhB;AACA,QAAMG,GAAG,GAAGD,IAAI,CAACC,GAAL,OAAAD,IAAI,EAAQF,SAAR,CAAhB;AAEA,WAAO;AACHD,MAAAA,OAAO,EAAPA,OADG;AAEHE,MAAAA,GAAG,EAAHA,GAFG;AAGHE,MAAAA,GAAG,EAAHA;AAHG,KAAP;AAKH,GAnBM,EAmBJ,CAACN,KAAD,EAAQC,IAAR,CAnBI,CAJmB;AAAA,CAAvB;AAyBA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAC9BH,GAD8B,EAE9BE,GAF8B,EAG9BE,KAH8B,EAI9BC,MAJ8B,EAK9BtD,MAL8B;AAAA,SAO9B8B,OAAO,CAAC,YAAM;AACV,QAAI9B,MAAM,KAAK,UAAf,EAA2B;AACvB,aAAOuD,WAAW,GAAGC,MAAd,CAAqB,CAACL,GAAD,EAAMF,GAAN,CAArB,EAAiCQ,KAAjC,CAAuC,CAAC,CAAD,EAAIH,MAAJ,CAAvC,CAAP;AACH;;AAED,WAAOC,WAAW,GAAGC,MAAd,CAAqB,CAACP,GAAD,EAAME,GAAN,CAArB,EAAiCM,KAAjC,CAAuC,CAAC,CAAD,EAAIJ,KAAJ,CAAvC,CAAP;AACH,GANM,EAMJ,CAACJ,GAAD,EAAME,GAAN,EAAWE,KAAX,EAAkBC,MAAlB,EAA0BtD,MAA1B,CANI,CAPuB;AAAA,CAA3B;AAeA,IAAM0D,iBAAiB,GAAG,SAApBA,iBAAoB,CAC7BZ,IAD6B,EAE7BV,EAF6B,EAG7BC,KAH6B,EAI5B;AACD,MAAMsB,KAAuD,GACzD,OAAOvB,EAAP,KAAc,UAAd,GAA2BA,EAA3B,GAAgC,UAACE,KAAD;AAAA,WAAqB,KAAIA,KAAJ,EAAWF,EAAX,CAArB;AAAA,GADpC;AAEA,MAAMwB,QAAiD,GACnD,OAAOvB,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsC,UAACC,KAAD;AAAA,WAAqB,KAAIA,KAAJ,EAAWD,KAAX,EAAkB,CAAlB,CAArB;AAAA,GAD1C;AAGA,SAAOP,OAAO,CAAC,YAAM;AACjB,QAAM+B,UAAuC,GAAG,EAAhD;AACAf,IAAAA,IAAI,CAACb,OAAL,CAAa,UAACK,KAAD,EAAQwB,KAAR,EAAkB;AAC3B,UAAMC,OAAO,GAAGJ,KAAK,CAACrB,KAAD,CAArB;AACA,UAAM0B,UAAU,GAAGJ,QAAQ,CAACtB,KAAD,CAA3B;AAEAuB,MAAAA,UAAU,CAAC1B,IAAX,CAAgB;AACZ2B,QAAAA,KAAK,EAALA,KADY;AAEZ1B,QAAAA,EAAE,EAAE2B,OAFQ;AAGZ1B,QAAAA,KAAK,EAAE2B,UAHK;AAIZlB,QAAAA,IAAI,EAAER;AAJM,OAAhB;AAMH,KAVD;AAYA,WAAOuB,UAAP;AACH,GAfa,EAeX,CAACf,IAAD,EAAOa,KAAP,EAAcC,QAAd,CAfW,CAAd;AAgBH,CA1BM;AA4BA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAC7BnB,IAD6B,QAC7BA,IAD6B;AAAA,MAE7BO,KAF6B,QAE7BA,KAF6B;AAAA,MAG7BC,MAH6B,QAG7BA,MAH6B;AAAA,MAI7BtD,MAJ6B,QAI7BA,MAJ6B;AAAA,MAK7BE,YAL6B,QAK7BA,YAL6B;AAAA,MAM7BC,YAN6B,QAM7BA,YAN6B;AAAA,SAe7B2B,OAAO,CAAC,YAAM;AACV,QAAMoC,UAAU,GAAGpB,IAAI,CAACqB,MAAL,CAAY,UAACC,GAAD,EAAM9B,KAAN;AAAA,aAAgB8B,GAAG,GAAG9B,KAAK,CAACD,KAA5B;AAAA,KAAZ,EAA+C,CAA/C,CAAnB;AAEA,QAAMgC,cAAc,GAAGd,WAAW,GAAGC,MAAd,CAAqB,CAAC,CAAD,EAAIU,UAAJ,CAArB,CAAvB;AAEA,QAAMI,YAAY,GAAG,IAAIpE,YAAJ,GAAmB,CAAC4C,IAAI,CAACyB,MAAL,GAAc,CAAf,IAAoBpE,YAA5D;;AAEA,QAAIH,MAAM,KAAK,UAAf,EAA2B;AACvBqE,MAAAA,cAAc,CAACZ,KAAf,CAAqB,CAAC,CAAD,EAAIJ,KAAK,GAAGiB,YAAZ,CAArB;AACH,KAFD,MAEO;AACHD,MAAAA,cAAc,CAACZ,KAAf,CAAqB,CAAC,CAAD,EAAIH,MAAM,GAAGgB,YAAb,CAArB;AACH;;AAED,WAAOD,cAAP;AACH,GAdM,EAcJ,CAACvB,IAAD,EAAOO,KAAP,EAAcC,MAAd,EAAsBtD,MAAtB,CAdI,CAfsB;AAAA,CAA1B;AA+BA,IAAMwE,eAAe,GAAG,SAAlBA,eAAkB,QAsBzB;AAAA,MArBF1B,IAqBE,SArBFA,IAqBE;AAAA,MApBFC,OAoBE,SApBFA,OAoBE;AAAA,MAnBFf,YAmBE,SAnBFA,YAmBE;AAAA,MAlBFyC,WAkBE,SAlBFA,WAkBE;AAAA,MAjBFJ,cAiBE,SAjBFA,cAiBE;AAAA,MAhBFK,eAgBE,SAhBFA,eAgBE;AAAA,MAfFnE,MAeE,SAfFA,MAeE;AAAA,MAdFP,MAcE,SAdFA,MAcE;AAAA,MAbFE,YAaE,SAbFA,YAaE;AAAA,MAZFC,YAYE,SAZFA,YAYE;AACF,MAAMwE,QAAQ,GAAGC,oBAAoB,CAA0CrE,MAA1C,EAAkD,IAAlD,CAArC;AAEA,MAAMsE,WAAW,GAAGC,iBAAiB,CAACL,WAAD,CAArC;AAEA,SAAO3C,OAAO,CAAC,YAAM;AACjB,QAAMiD,YAAuC,GAAG,EAAhD;AAEA,QAAIC,QAAQ,GAAG9E,YAAf;AAEA4C,IAAAA,IAAI,CAACb,OAAL,CAAa,UAAAK,KAAK,EAAI;AAClB,UAAM2C,SAAS,GAAGZ,cAAc,CAAC/B,KAAK,CAACD,KAAP,CAAhC;;AAEA,UAAM6C,aAAsC,qCACrC5C,KADqC;AAExC6C,QAAAA,CAAC,EAAEnF,MAAM,KAAK,UAAX,GAAwBgF,QAAxB,GAAmC,CAFE;AAGxCI,QAAAA,CAAC,EAAEpF,MAAM,KAAK,UAAX,GAAwB,CAAxB,GAA4BgF,QAHS;AAIxC3B,QAAAA,KAAK,EAAErD,MAAM,KAAK,UAAX,GAAwBiF,SAAxB,GAAoC,CAJH;AAKxC3B,QAAAA,MAAM,EAAEtD,MAAM,KAAK,UAAX,GAAwB,CAAxB,GAA4BiF,SALI;AAMxClD,QAAAA,UAAU,EAAE;AAN4B,QAA5C;;AASA,UAAMsD,YAAsB,GAAG,EAA/B;AACA,UAAIC,SAAS,GAAG,CAAhB;AAEAN,MAAAA,QAAQ,IAAIC,SAAS,GAAG9E,YAAxB;AAEA6B,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAAAsD,WAAW,EAAI;AAChC,YAAMrD,SAAS,GAAGa,OAAO,CAACyC,IAAR,CAAa,UAAA3C,KAAK;AAAA,iBAAIA,KAAK,CAACF,GAAN,KAAc4C,WAAlB;AAAA,SAAlB,CAAlB;;AACA,YAAIrD,SAAJ,EAAe;AACX,cAAMuD,cAAc,GAAGvD,SAAS,CAACI,KAAK,CAACwB,KAAP,CAAhC;AACA,cAAM4B,cAAwC,GAAG;AAC7CtD,YAAAA,EAAE,EAAEmD,WADyC;AAE7CjD,YAAAA,KAAK,EAAE4C,aAFsC;AAG7C7C,YAAAA,KAAK,EAAEoD,cAAc,CAAC,CAAD,CAAd,GAAoBA,cAAc,CAAC,CAAD,CAHI;AAI7CE,YAAAA,cAAc,EAAEd,WAAW,CAACY,cAAc,CAAC,CAAD,CAAd,GAAoBA,cAAc,CAAC,CAAD,CAAnC,CAJkB;AAK7CG,YAAAA,KAAK,EAAE,kBALsC;AAM7CT,YAAAA,CAAC,EAAE,CAN0C;AAO7CC,YAAAA,CAAC,EAAE,CAP0C;AAQ7C/B,YAAAA,KAAK,EAAE,CARsC;AAS7CC,YAAAA,MAAM,EAAE;AATqC,WAAjD;AAYA,cAAMuC,SAAS,GAAGnB,eAAe,CAACe,cAAc,CAAC,CAAD,CAAf,CAAjC;AACA,cAAMK,SAAS,GAAGpB,eAAe,CAACe,cAAc,CAAC,CAAD,CAAf,CAAjC;;AAEA,cAAIzF,MAAM,KAAK,UAAf,EAA2B;AACvB0F,YAAAA,cAAc,CAACP,CAAf,GAAmBD,aAAa,CAACC,CAAjC;AACAO,YAAAA,cAAc,CAACN,CAAf,GAAmBlC,IAAI,CAACD,GAAL,CAAS4C,SAAT,EAAoBC,SAApB,CAAnB;AACAJ,YAAAA,cAAc,CAACrC,KAAf,GAAuB6B,aAAa,CAAC7B,KAArC;AACAqC,YAAAA,cAAc,CAACpC,MAAf,GAAwBJ,IAAI,CAACC,GAAL,CAAS0C,SAAT,EAAoBC,SAApB,IAAiCJ,cAAc,CAACN,CAAxE;AAEAC,YAAAA,YAAY,CAAClD,IAAb,CAAkBuD,cAAc,CAACN,CAAjC;AACAE,YAAAA,SAAS,IAAII,cAAc,CAACpC,MAA5B;AACH,WARD,MAQO;AACHoC,YAAAA,cAAc,CAACP,CAAf,GAAmBjC,IAAI,CAACD,GAAL,CAAS4C,SAAT,EAAoBC,SAApB,CAAnB;AACAJ,YAAAA,cAAc,CAACN,CAAf,GAAmBF,aAAa,CAACE,CAAjC;AACAM,YAAAA,cAAc,CAACrC,KAAf,GAAuBH,IAAI,CAACC,GAAL,CAAS0C,SAAT,EAAoBC,SAApB,IAAiCJ,cAAc,CAACP,CAAvE;AACAO,YAAAA,cAAc,CAACpC,MAAf,GAAwB4B,aAAa,CAAC5B,MAAtC;AAEA+B,YAAAA,YAAY,CAAClD,IAAb,CAAkBuD,cAAc,CAACP,CAAjC;AACAG,YAAAA,SAAS,IAAII,cAAc,CAACrC,KAA5B;AACH;;AAEDqC,UAAAA,cAAc,CAACE,KAAf,GAAuBjB,QAAQ,CAACe,cAAD,CAA/B;AAEAR,UAAAA,aAAa,CAACnD,UAAd,CAAyBI,IAAzB,CAA8BuD,cAA9B;AACH;;AAED,YAAI1F,MAAM,KAAK,UAAf,EAA2B;AACvBkF,UAAAA,aAAa,CAACE,CAAd,GAAkBlC,IAAI,CAACD,GAAL,OAAAC,IAAI,EAAQmC,YAAR,CAAtB;AACAH,UAAAA,aAAa,CAAC5B,MAAd,GAAuBgC,SAAvB;AACH,SAHD,MAGO;AACHJ,UAAAA,aAAa,CAACC,CAAd,GAAkBjC,IAAI,CAACD,GAAL,OAAAC,IAAI,EAAQmC,YAAR,CAAtB;AACAH,UAAAA,aAAa,CAAC7B,KAAd,GAAsBiC,SAAtB;AACH;AACJ,OAjDD;AAmDAP,MAAAA,YAAY,CAAC5C,IAAb,CAAkB+C,aAAlB;AACH,KArED;AAuEA,WAAOH,YAAP;AACH,GA7Ea,EA6EX,CACCjC,IADD,EAECC,OAFD,EAGCf,YAHD,EAICqC,cAJD,EAKCK,eALD,EAMC1E,MAND,EAOCE,YAPD,EAQCC,YARD,EASCwE,QATD,EAUCE,WAVD,CA7EW,CAAd;AAyFH,CApHM;AAsHA,IAAMkB,OAAO,GAAG,SAAVA,OAAU,CACnBjD,IADmB,EAEnBpC,WAFmB,EAGnBD,WAHmB,EAIlB;AACD,MAAMuF,KAAK,GAAGC,QAAQ,EAAtB;AACA,MAAMC,cAAc,GAAGC,iBAAiB,CAA2BzF,WAA3B,EAAwCsF,KAAxC,CAAxC;AAEA,SAAOlE,OAAO,CAAC,YAAM;AACjB,QAAMsE,GAAyB,GAAG,EAAlC;AACAtD,IAAAA,IAAI,CAACb,OAAL,CAAa,UAAAK,KAAK,EAAI;AAClBA,MAAAA,KAAK,CAACP,UAAN,CAAiBE,OAAjB,CAAyB,UAAAC,SAAS,EAAI;AAClCkE,QAAAA,GAAG,CAACjE,IAAJ;AACIQ,UAAAA,GAAG,YAAKL,KAAK,CAACF,EAAX,cAAiBF,SAAS,CAACE,EAA3B;AADP,WAEOF,SAFP;AAGIxB,UAAAA,WAAW,EAAEwF,cAAc,CAAChE,SAAD,CAH/B;AAIIzB,UAAAA,WAAW,EAAXA;AAJJ;AAMH,OAPD;AAQH,KATD;AAWA,WAAO2F,GAAP;AACH,GAda,EAcX,CAACtD,IAAD,EAAOrC,WAAP,EAAoByF,cAApB,CAdW,CAAd;AAeH,CAvBM;AAyBA,IAAMG,YAAY,GAAG,SAAfA,YAAe,QA8BtB;AAAA,MA7BFvD,IA6BE,SA7BFA,IA6BE;AAAA,MA5BFV,EA4BE,SA5BFA,EA4BE;AAAA,MA3BFC,KA2BE,SA3BFA,KA2BE;AAAA,MA1BFoC,WA0BE,SA1BFA,WA0BE;AAAA,MAzBU5C,aAyBV,SAzBFE,UAyBE;AAAA,MAxBF/B,MAwBE,SAxBFA,MAwBE;AAAA,MAvBFC,MAuBE,SAvBFA,MAuBE;AAAA,MAtBFC,YAsBE,SAtBFA,YAsBE;AAAA,MArBFC,YAqBE,SArBFA,YAqBE;AAAA,MApBFI,MAoBE,SApBFA,MAoBE;AAAA,MAnBFG,WAmBE,SAnBFA,WAmBE;AAAA,MAlBFD,WAkBE,SAlBFA,WAkBE;AAAA,MAjBF4C,KAiBE,SAjBFA,KAiBE;AAAA,MAhBFC,MAgBE,SAhBFA,MAgBE;;AAAA,2BACmC1B,iBAAiB,CAAWC,aAAX,CADpD;AAAA,MACMG,YADN,sBACMA,YADN;AAAA,MACoBD,UADpB,sBACoBA,UADpB;;AAEF,MAAMc,KAAK,GAAGN,QAAQ,CAAWP,YAAX,EAAyBD,UAAzB,EAAqC9B,MAArC,CAAtB;;AAFE,wBAG4B2C,cAAc,CAAWC,KAAX,EAAkBC,IAAlB,CAH1C;AAAA,MAGMC,OAHN,mBAGMA,OAHN;AAAA,MAGeE,GAHf,mBAGeA,GAHf;AAAA,MAGoBE,GAHpB,mBAGoBA,GAHpB;;AAIF,MAAMmD,cAAc,GAAG5C,iBAAiB,CAAWZ,IAAX,EAAiBV,EAAjB,EAAqBC,KAArB,CAAxC;AACA,MAAMgC,cAAc,GAAGJ,iBAAiB,CAAC;AACrCnB,IAAAA,IAAI,EAAEwD,cAD+B;AAErCjD,IAAAA,KAAK,EAALA,KAFqC;AAGrCC,IAAAA,MAAM,EAANA,MAHqC;AAIrCtD,IAAAA,MAAM,EAANA,MAJqC;AAKrCE,IAAAA,YAAY,EAAZA,YALqC;AAMrCC,IAAAA,YAAY,EAAZA;AANqC,GAAD,CAAxC;AAQA,MAAMuE,eAAe,GAAGtB,kBAAkB,CAACH,GAAD,EAAME,GAAN,EAAWE,KAAX,EAAkBC,MAAlB,EAA0BtD,MAA1B,CAA1C;AACA,MAAM+E,YAAY,GAAGP,eAAe,CAAW;AAC3C1B,IAAAA,IAAI,EAAEwD,cADqC;AAE3CvD,IAAAA,OAAO,EAAPA,OAF2C;AAG3Cf,IAAAA,YAAY,EAAZA,YAH2C;AAI3CyC,IAAAA,WAAW,EAAXA,WAJ2C;AAK3CJ,IAAAA,cAAc,EAAdA,cAL2C;AAM3CK,IAAAA,eAAe,EAAfA,eAN2C;AAO3CnE,IAAAA,MAAM,EAANA,MAP2C;AAQ3CP,IAAAA,MAAM,EAANA,MAR2C;AAS3CE,IAAAA,YAAY,EAAZA,YAT2C;AAU3CC,IAAAA,YAAY,EAAZA;AAV2C,GAAX,CAApC;AAYA,MAAMoG,IAAI,GAAGR,OAAO,CAAWhB,YAAX,EAAyBrE,WAAzB,EAAsCD,WAAtC,CAApB;AAEA,SAAO;AACHsE,IAAAA,YAAY,EAAZA,YADG;AAEHwB,IAAAA,IAAI,EAAJA,IAFG;AAGHlC,IAAAA,cAAc,EAAdA,cAHG;AAIHK,IAAAA,eAAe,EAAfA,eAJG;AAKH1C,IAAAA,YAAY,EAAZA;AALG,GAAP;AAOH,CAjEM;AAmEA,IAAMwE,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAC3B1D,IAD2B,SAC3BA,IAD2B;AAAA,MAE3ByD,IAF2B,SAE3BA,IAF2B;AAAA,MAG3BlC,cAH2B,SAG3BA,cAH2B;AAAA,MAI3BK,eAJ2B,SAI3BA,eAJ2B;AAAA,SAW3B5C,OAAO,CACH;AAAA,WAAO;AACHgB,MAAAA,IAAI,EAAJA,IADG;AAEHyD,MAAAA,IAAI,EAAJA,IAFG;AAGHlC,MAAAA,cAAc,EAAdA,cAHG;AAIHK,MAAAA,eAAe,EAAfA;AAJG,KAAP;AAAA,GADG,EAOH,CAAC5B,IAAD,EAAOyD,IAAP,EAAalC,cAAb,EAA6BK,eAA7B,CAPG,CAXoB;AAAA,CAAxB;AAqBA,IAAM+B,aAAa,GAAG,SAAhBA,aAAgB,CAAWzE,YAAX,EAAmCuE,IAAnC,EAAkE;AAC3F,MAAMG,UAKH,GAAG,EALN;AAOA1E,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAAAsD,WAAW,EAAI;AAChC,QAAMoB,GAAG,GAAGJ,IAAI,CAACf,IAAL,CAAU,UAAAmB,GAAG;AAAA,aAAIA,GAAG,CAACvE,EAAJ,KAAWmD,WAAf;AAAA,KAAb,CAAZ;;AACA,QAAIoB,GAAJ,EAAS;AACLD,MAAAA,UAAU,CAACvE,IAAX,CAAgB;AACZC,QAAAA,EAAE,EAAEmD,WADQ;AAEZqB,QAAAA,KAAK,EAAErB,WAFK;AAGZK,QAAAA,KAAK,EAAEe,GAAG,CAACf,KAHC;AAIZiB,QAAAA,IAAI,EAAEF,GAAG,CAACE;AAJE,OAAhB;AAMH;AACJ,GAVD;AAYA,SAAOH,UAAP;AACH,CArBM;;AC/WA,IAAMI,GAAG,GAAG,SAANA,GAAM,OASO;AAAA;;AAAA,MARtBH,GAQsB,QARtBA,GAQsB;AAAA,MAPtBI,aAOsB,QAPtBA,aAOsB;AAAA,MANtBlG,aAMsB,QANtBA,aAMsB;AAAA,MALtBmG,OAKsB,QALtBA,OAKsB;AAAA,MAJtBC,OAIsB,QAJtBA,OAIsB;AAAA,MAHtBC,YAGsB,QAHtBA,YAGsB;AAAA,MAFtBC,WAEsB,QAFtBA,WAEsB;AAAA,MADtBC,YACsB,QADtBA,YACsB;;AAAA,oBACwBC,UAAU,EADlC;AAAA,MACdC,oBADc,eACdA,oBADc;AAAA,MACQC,WADR,eACQA,WADR;;AAGtB,MAAMC,WAAW,GAAGC,WAAW,CAC3B,UAAAC,KAAK;AAAA,WAAIJ,oBAAoB,CAACK,aAAa,CAACX,OAAD,EAAU;AAAEL,MAAAA,GAAG,EAAHA;AAAF,KAAV,CAAd,EAAkCe,KAAlC,CAAxB;AAAA,GADsB,EAE3B,CAACJ,oBAAD,EAAuBN,OAAvB,EAAgCL,GAAhC,CAF2B,CAA/B;AAKA,MAAMiB,WAAW,GAAGH,WAAW,CAC3B,UAACC,KAAD,EAAuC;AACnCT,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGN,GAAH,EAAQe,KAAR,CAAP;AACH,GAH0B,EAI3B,CAACT,OAAD,EAAUN,GAAV,CAJ2B,CAA/B;AAOA,MAAMkB,gBAAgB,GAAGJ,WAAW,CAChC,UAACC,KAAD,EAAuC;AACnCR,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGP,GAAH,EAAQe,KAAR,CAAZ;AACAF,IAAAA,WAAW,CAACE,KAAD,CAAX;AACH,GAJ+B,EAKhC,CAACF,WAAD,EAAcb,GAAd,CALgC,CAApC;AAQA,MAAMmB,eAAe,GAAGL,WAAW,CAC/B,UAACC,KAAD,EAAuC;AACnCP,IAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGR,GAAH,EAAQe,KAAR,CAAX;AACAF,IAAAA,WAAW,CAACE,KAAD,CAAX;AACH,GAJ8B,EAK/B,CAACF,WAAD,EAAcb,GAAd,CAL+B,CAAnC;AAQA,MAAMoB,gBAAgB,GAAGN,WAAW,CAChC,UAACC,KAAD,EAAuC;AACnCN,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGT,GAAH,EAAQe,KAAR,CAAZ;AACAH,IAAAA,WAAW;AACd,GAJ+B,EAKhC,CAACH,YAAD,EAAeT,GAAf,EAAoBY,WAApB,CALgC,CAApC;AAQA,SACI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,CAAC,EAAER,aAAa,CAAC5B,CADrB;AAEI,IAAA,CAAC,EAAE4B,aAAa,CAAC3B,CAFrB;AAGI,IAAA,KAAK,EAAE4C,EAAE,CAACjB,aAAa,CAAC1D,KAAf,EAAsB,UAAAhB,KAAK;AAAA,aAAIa,IAAI,CAACC,GAAL,CAASd,KAAT,EAAgB,CAAhB,CAAJ;AAAA,KAA3B,CAHb;AAII,IAAA,MAAM,EAAE2F,EAAE,CAACjB,aAAa,CAACzD,MAAf,EAAuB,UAAAjB,KAAK;AAAA,aAAIa,IAAI,CAACC,GAAL,CAASd,KAAT,EAAgB,CAAhB,CAAJ;AAAA,KAA5B,CAJd;AAKI,IAAA,IAAI,eAAEsE,GAAG,CAACE,IAAN,iDAAcE,aAAa,CAACnB,KALpC;AAMI,IAAA,MAAM,EAAEmB,aAAa,CAACrG,WAN1B;AAOI,IAAA,WAAW,EAAEiG,GAAG,CAAClG,WAPrB;AAQI,IAAA,OAAO,EAAEI,aAAa,GAAG+G,WAAH,GAAiBK,SAR3C;AASI,IAAA,YAAY,EAAEpH,aAAa,GAAGgH,gBAAH,GAAsBI,SATrD;AAUI,IAAA,WAAW,EAAEpH,aAAa,GAAGiH,eAAH,GAAqBG,SAVnD;AAWI,IAAA,YAAY,EAAEpH,aAAa,GAAGkH,gBAAH,GAAsBE;AAXrD,IADJ;AAeH,CA/DM;;ACRA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAQO;AAAA,MAPvB3B,IAOuB,QAPvBA,IAOuB;AAAA,MANvB1F,aAMuB,QANvBA,aAMuB;AAAA,MALvBmG,OAKuB,QALvBA,OAKuB;AAAA,MAJvBC,OAIuB,QAJvBA,OAIuB;AAAA,MAHvBC,YAGuB,QAHvBA,YAGuB;AAAA,MAFvBC,WAEuB,QAFvBA,WAEuB;AAAA,MADvBC,YACuB,QADvBA,YACuB;;AAAA,yBACmBe,eAAe,EADlC;AAAA,MACfrH,OADe,oBACfA,OADe;AAAA,MACEsH,YADF,oBACNC,MADM;;AAGvB,MAAMC,UAAU,GAAGC,aAAa,CAW9BhC,IAX8B,EAWxB;AACJ5D,IAAAA,GAAG,EAAE,aAAAgE,GAAG;AAAA,aAAIA,GAAG,CAAChE,GAAR;AAAA,KADJ;AAEJ6F,IAAAA,OAAO,EAAE,iBAAA7B,GAAG;AAAA,aAAK;AACbxB,QAAAA,CAAC,EAAEwB,GAAG,CAACxB,CADM;AAEbC,QAAAA,CAAC,EAAEuB,GAAG,CAACvB,CAFM;AAGb/B,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAHE;AAIbC,QAAAA,MAAM,EAAEqD,GAAG,CAACrD,MAJC;AAKbsC,QAAAA,KAAK,EAAEe,GAAG,CAACf,KALE;AAMb6C,QAAAA,OAAO,EAAE,CANI;AAOb/H,QAAAA,WAAW,EAAEiG,GAAG,CAACjG;AAPJ,OAAL;AAAA,KAFR;AAWJC,IAAAA,IAAI,EAAE,cAAAgG,GAAG;AAAA,aAAK;AACVxB,QAAAA,CAAC,EAAEwB,GAAG,CAACxB,CADG;AAEVC,QAAAA,CAAC,EAAEuB,GAAG,CAACvB,CAFG;AAGV/B,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAHD;AAIVC,QAAAA,MAAM,EAAEqD,GAAG,CAACrD,MAJF;AAKVsC,QAAAA,KAAK,EAAEe,GAAG,CAACf,KALD;AAMV6C,QAAAA,OAAO,EAAE,CANC;AAOV/H,QAAAA,WAAW,EAAEiG,GAAG,CAACjG;AAPP,OAAL;AAAA,KAXL;AAoBJgI,IAAAA,KAAK,EAAE,eAAA/B,GAAG;AAAA,aAAK;AACXxB,QAAAA,CAAC,EAAEwB,GAAG,CAACxB,CADI;AAEXC,QAAAA,CAAC,EAAEuB,GAAG,CAACvB,CAFI;AAGX/B,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAHA;AAIXC,QAAAA,MAAM,EAAEqD,GAAG,CAACrD,MAJD;AAKXsC,QAAAA,KAAK,EAAEe,GAAG,CAACf,KALA;AAMX6C,QAAAA,OAAO,EAAE,CANE;AAOX/H,QAAAA,WAAW,EAAEiG,GAAG,CAACjG;AAPN,OAAL;AAAA,KApBN;AA6BJiI,IAAAA,MAAM,EAAE,gBAAAhC,GAAG;AAAA,aAAK;AACZxB,QAAAA,CAAC,EAAEwB,GAAG,CAACxB,CADK;AAEZC,QAAAA,CAAC,EAAEuB,GAAG,CAACvB,CAFK;AAGZ/B,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAHC;AAIZC,QAAAA,MAAM,EAAEqD,GAAG,CAACrD,MAJA;AAKZsC,QAAAA,KAAK,EAAEe,GAAG,CAACf,KALC;AAMZ6C,QAAAA,OAAO,EAAE,CANG;AAOZ/H,QAAAA,WAAW,EAAEiG,GAAG,CAACjG;AAPL,OAAL;AAAA,KA7BP;AAsCJkI,IAAAA,KAAK,EAAE,eAAAjC,GAAG;AAAA,aAAK;AACX8B,QAAAA,OAAO,EAAE,CADE;AAEXtD,QAAAA,CAAC,EAAEwB,GAAG,CAACxB,CAFI;AAGXC,QAAAA,CAAC,EAAEuB,GAAG,CAACvB,CAHI;AAIX/B,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAJA;AAKXC,QAAAA,MAAM,EAAEqD,GAAG,CAACrD,MALD;AAMXsC,QAAAA,KAAK,EAAEe,GAAG,CAACf;AANA,OAAL;AAAA,KAtCN;AA8CJyC,IAAAA,MAAM,EAAED,YA9CJ;AA+CJS,IAAAA,SAAS,EAAE,CAAC/H;AA/CR,GAXwB,CAAhC;AA6DA,SACI,0CACKwH,UAAU,CAAC,UAACQ,KAAD,EAAQnC,GAAR;AAAA,WACR,oBAAC,GAAD;AACI,MAAA,GAAG,EAAEA,GAAG,CAAChE,GADb;AAEI,MAAA,GAAG,EAAEgE,GAFT;AAGI,MAAA,aAAa,EAAEmC,KAHnB;AAII,MAAA,aAAa,EAAEjI,aAJnB;AAKI,MAAA,OAAO,EAAEmG,OALb;AAMI,MAAA,OAAO,EAAEC,OANb;AAOI,MAAA,YAAY,EAAEC,YAPlB;AAQI,MAAA,WAAW,EAAEC,WARjB;AASI,MAAA,YAAY,EAAEC;AATlB,MADQ;AAAA,GAAD,CADf,CADJ;AAiBH,CAzFM;;ACRA,IAAM2B,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAcpC,GAAd,QAAcA,GAAd;AAAA,SACtB,oBAAC,YAAD;AACI,IAAA,EAAE,YAAKA,GAAG,CAACrE,KAAJ,CAAUF,EAAf,gBAAuBuE,GAAG,CAACvE,EAA3B,CADN;AAEI,IAAA,KAAK,EAAEuE,GAAG,CAAChB,cAFf;AAGI,IAAA,UAAU,EAAE,IAHhB;AAII,IAAA,KAAK,EAAEgB,GAAG,CAACf;AAJf,IADsB;AAAA,CAAnB;;ACaP,IAAMoD,cAAc,GAAG,SAAjBA,cAAiB,OAqCG;AAAA,MApCtBlG,IAoCsB,QApCtBA,IAoCsB;AAAA,MAnCtBV,EAmCsB,QAnCtBA,EAmCsB;AAAA,MAlCtBC,KAkCsB,QAlCtBA,KAkCsB;AAAA,MAjCtBoC,WAiCsB,QAjCtBA,WAiCsB;AAAA,MAhCtB1C,UAgCsB,QAhCtBA,UAgCsB;AAAA,MA/BtBsB,KA+BsB,QA/BtBA,KA+BsB;AAAA,MA9BtBC,MA8BsB,QA9BtBA,MA8BsB;AAAA,MA7Bd2F,aA6Bc,QA7BtBC,MA6BsB;AAAA,yBA5BtBlJ,MA4BsB;AAAA,MA5BtBA,MA4BsB,4BA5BbD,YAAY,CAACC,MA4BA;AAAA,yBA3BtBC,MA2BsB;AAAA,MA3BtBA,MA2BsB,4BA3BbF,YAAY,CAACE,MA2BA;AAAA,+BA1BtBC,YA0BsB;AAAA,MA1BtBA,YA0BsB,kCA1BPH,YAAY,CAACG,YA0BN;AAAA,+BAzBtBC,YAyBsB;AAAA,MAzBtBA,YAyBsB,kCAzBPJ,YAAY,CAACI,YAyBN;AAAA,yBAxBtBC,MAwBsB;AAAA,MAxBtBA,MAwBsB,4BAxBbL,YAAY,CAACK,MAwBA;AAAA,MAvBtB+I,OAuBsB,QAvBtBA,OAuBsB;AAAA,MAtBtBC,SAsBsB,QAtBtBA,SAsBsB;AAAA,MArBtBC,UAqBsB,QArBtBA,UAqBsB;AAAA,MApBtBC,QAoBsB,QApBtBA,QAoBsB;AAAA,8BAnBtBjJ,WAmBsB;AAAA,MAnBtBA,WAmBsB,iCAnBRN,YAAY,CAACM,WAmBL;AAAA,MAlBtBkJ,WAkBsB,QAlBtBA,WAkBsB;AAAA,8BAjBtBjJ,WAiBsB;AAAA,MAjBtBA,WAiBsB,iCAjBRP,YAAY,CAACO,WAiBL;AAAA,MAhBtBkJ,WAgBsB,QAhBtBA,WAgBsB;AAAA,yBAftBjJ,MAesB;AAAA,MAftBA,MAesB,4BAfbR,YAAY,CAACQ,MAeA;AAAA,uBAZtBkJ,IAYsB;AAAA,MAZtBA,IAYsB,0BAZf,EAYe;AAAA,uBAXtB5C,IAWsB;AAAA,MAXtBA,IAWsB,0BAXf,EAWe;AAAA,8BAVtBpG,WAUsB;AAAA,MAVtBA,WAUsB,iCAVRV,YAAY,CAACU,WAUL;AAAA,8BATtBC,WASsB;AAAA,MATtBA,WASsB,iCATRX,YAAY,CAACW,WASL;AAAA,gCARtBG,aAQsB;AAAA,MARtBA,aAQsB,mCARNd,YAAY,CAACc,aAQP;AAAA,0BAPtBmG,OAOsB;AAAA,MAPtBA,OAOsB,6BAPZ+B,UAOY;AAAA,MANtB9B,OAMsB,QANtBA,OAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,MAJtBC,WAIsB,QAJtBA,WAIsB;AAAA,MAHtBC,YAGsB,QAHtBA,YAGsB;AAAA,0BAFtBsC,OAEsB;AAAA,MAFtBA,OAEsB,6BAFZ,EAEY;AAAA,MADtBC,IACsB,QADtBA,IACsB;;AAAA,uBAC+CC,aAAa,CAC9EvG,KAD8E,EAE9EC,MAF8E,EAG9E2F,aAH8E,CAD5D;AAAA,MACdY,UADc,kBACdA,UADc;AAAA,MACFC,WADE,kBACFA,WADE;AAAA,MACWZ,MADX,kBACWA,MADX;AAAA,MACmBa,UADnB,kBACmBA,UADnB;AAAA,MAC+BC,WAD/B,kBAC+BA,WAD/B;;AAAA,sBAOwD3D,YAAY,CAExF;AACEvD,IAAAA,IAAI,EAAJA,IADF;AAEEV,IAAAA,EAAE,EAAFA,EAFF;AAGEC,IAAAA,KAAK,EAALA,KAHF;AAIEN,IAAAA,UAAU,EAAVA,UAJF;AAKE0C,IAAAA,WAAW,EAAXA,WALF;AAMEzE,IAAAA,MAAM,EAANA,MANF;AAOEC,IAAAA,MAAM,EAANA,MAPF;AAQEC,IAAAA,YAAY,EAAZA,YARF;AASEC,IAAAA,YAAY,EAAZA,YATF;AAUEI,IAAAA,MAAM,EAANA,MAVF;AAWEG,IAAAA,WAAW,EAAXA,WAXF;AAYED,IAAAA,WAAW,EAAXA,WAZF;AAaE4C,IAAAA,KAAK,EAAE0G,UAbT;AAcEzG,IAAAA,MAAM,EAAE0G;AAdV,GAFwF,CAPpE;AAAA,MAOdjF,YAPc,iBAOdA,YAPc;AAAA,MAOAwB,IAPA,iBAOAA,IAPA;AAAA,MAOMlC,cAPN,iBAOMA,cAPN;AAAA,MAOsBK,eAPtB,iBAOsBA,eAPtB;AAAA,MAOuC1C,YAPvC,iBAOuCA,YAPvC;;AA0BtB,MAAMiI,SAAqC,GAAG;AAC1CC,IAAAA,IAAI,EAAE,IADoC;AAE1CC,IAAAA,IAAI,EAAE,IAFoC;AAG1C5D,IAAAA,IAAI,EAAE,IAHoC;AAI1CmD,IAAAA,OAAO,EAAE;AAJiC,GAA9C;AAOA,MAAMU,SAAS,GAAGC,QAAQ,CAACZ,IAAD,EAAOlD,IAAP,EAAaM,IAAb,CAA1B;;AAEA,MAAIzG,MAAM,CAACkK,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBL,IAAAA,SAAS,CAAC1D,IAAV,GACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,IAAI,EAAEA,IAFV;AAGI,MAAA,aAAa,EAAE1F,aAHnB;AAII,MAAA,OAAO,EAAEmG,OAJb;AAKI,MAAA,OAAO,EAAEC,OALb;AAMI,MAAA,YAAY,EAAEC,YANlB;AAOI,MAAA,WAAW,EAAEC,WAPjB;AAQI,MAAA,YAAY,EAAEC;AARlB,MADJ;AAYH;;AAED,MAAMmD,MAAM,GAAGvK,MAAM,KAAK,UAAX,GAAwBqE,cAAxB,GAAyCK,eAAxD;AACA,MAAM8F,MAAM,GAAGxK,MAAM,KAAK,UAAX,GAAwB0E,eAAxB,GAA0CL,cAAzD;;AAEA,MAAIjE,MAAM,CAACkK,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBL,IAAAA,SAAS,CAACC,IAAV,GACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,MAAM,EAAE7J,WAAW,GAAIkK,MAAJ,GAAqBtC,SAF5C;AAGI,MAAA,MAAM,EAAE3H,WAAW,GAAIkK,MAAJ,GAAqBvC,SAH5C;AAII,MAAA,KAAK,EAAE8B,UAJX;AAKI,MAAA,MAAM,EAAEC,WALZ;AAMI,MAAA,OAAO,EAAET,WANb;AAOI,MAAA,OAAO,EAAEC;AAPb,MADJ;AAWH;;AAED,MAAIpJ,MAAM,CAACkK,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBL,IAAAA,SAAS,CAACE,IAAV,GACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,MAAM,EAAEI,MAFZ;AAGI,MAAA,MAAM,EAAEC,MAHZ;AAII,MAAA,KAAK,EAAET,UAJX;AAKI,MAAA,MAAM,EAAEC,WALZ;AAMI,MAAA,GAAG,EAAEb,OANT;AAOI,MAAA,KAAK,EAAEC,SAPX;AAQI,MAAA,MAAM,EAAEC,UARZ;AASI,MAAA,IAAI,EAAEC;AATV,MADJ;AAaH;;AAED,MAAM5C,UAAU,GAAGD,aAAa,CAAWzE,YAAX,EAAyBuE,IAAzB,CAAhC;;AAEA,MAAInG,MAAM,CAACkK,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;AAC5BL,IAAAA,SAAS,CAACP,OAAV,GACI;AAAG,MAAA,GAAG,EAAC;AAAP,OACKA,OAAO,CAACe,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,aACT,oBAAC,YAAD;AACI,QAAA,GAAG,EAAEA;AADT,SAEQD,MAFR;AAGI,QAAA,cAAc,EAAEX,UAHpB;AAII,QAAA,eAAe,EAAEC,WAJrB;AAKI,QAAA,IAAI,EAAEtD;AALV,SADS;AAAA,KAAZ,CADL,CADJ;AAaH;;AAED,MAAMkE,YAAY,GAAGpE,eAAe,CAAW;AAC3C1D,IAAAA,IAAI,EAAEiC,YADqC;AAE3CwB,IAAAA,IAAI,EAAJA,IAF2C;AAG3ClC,IAAAA,cAAc,EAAdA,cAH2C;AAI3CK,IAAAA,eAAe,EAAfA;AAJ2C,GAAX,CAApC;AAOA,SACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEmF,UADX;AAEI,IAAA,MAAM,EAAEC,WAFZ;AAGI,IAAA,MAAM,EAAEZ,MAHZ;AAII,IAAA,IAAI,EAAEkB,SAJV;AAKI,IAAA,IAAI,EAAET;AALV,KAOKvJ,MAAM,CAACqK,GAAP,CAAW,UAACI,KAAD,EAAQF,CAAR,EAAc;AACtB,QAAIV,SAAS,CAACY,KAAD,CAAT,KAAgC5C,SAApC,EAA+C;AAC3C,aAAOgC,SAAS,CAACY,KAAD,CAAhB;AACH;;AAED,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEF;AAAf,SAAmBhD,aAAa,CAACkD,KAAD,EAAQD,YAAR,CAAhC,CAAP;AACH;;AAED,WAAO,IAAP;AACH,GAVA,CAPL,CADJ;AAqBH,CAtKD;;IAwKaE,SAAS,GAAG,SAAZA,SAAY;AAAA,kCACrBjK,aADqB;AAAA,MACrBA,aADqB,oCACLd,YAAY,CAACc,aADR;AAAA,4BAErBC,OAFqB;AAAA,MAErBA,OAFqB,8BAEXf,YAAY,CAACe,OAFF;AAAA,iCAGrBC,YAHqB;AAAA,MAGrBA,YAHqB,mCAGNhB,YAAY,CAACgB,YAHP;AAAA,MAIlBgK,UAJkB;;AAAA,SAMrB,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,UAAU,CAAC/E,KADtB;AAEI,IAAA,aAAa,EAAEnF,aAFnB;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,YAAY,EAAEC;AAJlB,KAMI,oBAAC,cAAD;AACI,IAAA,aAAa,EAAEF,aADnB;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,YAAY,EAAEC;AAHlB,KAIQgK,UAJR,EANJ,CANqB;AAAA;;ICpLZC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC/BC,KAD+B;AAAA,SAG/B,oBAAC,iBAAD,QACK;AAAA,QAAG5H,KAAH,QAAGA,KAAH;AAAA,QAAUC,MAAV,QAAUA,MAAV;AAAA,WAAuB,oBAAC,SAAD;AAAqB,MAAA,KAAK,EAAED,KAA5B;AAAmC,MAAA,MAAM,EAAEC;AAA3C,OAAuD2H,KAAvD,EAAvB;AAAA,GADL,CAH+B;AAAA;;;;"}